 (scenario
    start-date: 2020
    end-date: 2050
    stock-id: /Labour2030/default-england-ehcs-2012.stock
    ;; scenario goes here:
    energy-calculator: BREDEM2012
    
    ; Modified version of 'CEDS_LED_baseline_v3_NO_FutureHomesStandard.nhm'
    ; Option 1 - ‘Future Homes Fabric’. This would be a 20% reduction3 in CO2 from new dwellings, compared to the current standards. This performance standard is based on the energy and carbon performance of a home with:
    ;  i. Very high fabric standards to minimise heat loss from windows, walls, floors and roofs (typically with triple glazing). This would be the same fabric requirement as we currently anticipate for the Future Homes Standard
    ;  ii. A gas boiler
    ;  iii. A waste water heat recovery system.
    
    ;; Climate Change manifests itself in UKTM as a 0.03C annual temperature rise, across the months
    ; should be a more elegant way of doing this
    
    (context.weather 
        (weather.case 
            (when (sim.year-is exactly: 2020)
                  (weather.perturb
                      offset-temperature: 0.03 #climate-change-weather))
            (when (sim.year-is exactly: 2021)
                  (weather.perturb
                      offset-temperature: 0.06 #climate-change-weather))
            (when (sim.year-is exactly: 2022)
                  (weather.perturb
                      offset-temperature: 0.09 #climate-change-weather))
            (when (sim.year-is exactly: 2023)
                  (weather.perturb
                      offset-temperature: 0.12 #climate-change-weather))
            (when (sim.year-is exactly: 2024)
                  (weather.perturb
                      offset-temperature: 0.15 #climate-change-weather))
            (when (sim.year-is exactly: 2025)
                  (weather.perturb
                      offset-temperature: 0.18 #climate-change-weather))
            (when (sim.year-is exactly: 2026)
                  (weather.perturb
                      offset-temperature: 0.21 #climate-change-weather))
            (when (sim.year-is exactly: 2027)
                  (weather.perturb
                      offset-temperature: 0.24 #climate-change-weather))
            (when (sim.year-is exactly: 2028)
                  (weather.perturb
                      offset-temperature: 0.27 #climate-change-weather))
            (when (sim.year-is exactly: 2029)
                  (weather.perturb
                      offset-temperature: 0.30 #climate-change-weather))
            (when (sim.year-is exactly: 2030)
                  (weather.perturb
                      offset-temperature: 0.33 #climate-change-weather))
            (when (sim.year-is exactly: 2031)
                  (weather.perturb
                      offset-temperature: 0.36 #climate-change-weather))
            (when (sim.year-is exactly: 2032)
                  (weather.perturb
                      offset-temperature: 0.39 #climate-change-weather))
            (when (sim.year-is exactly: 2033)
                  (weather.perturb
                      offset-temperature: 0.42 #climate-change-weather))
            (when (sim.year-is exactly: 2034)
                  (weather.perturb
                      offset-temperature: 0.45 #climate-change-weather))
            (when (sim.year-is exactly: 2035)
                  (weather.perturb
                      offset-temperature: 0.48 #climate-change-weather))
            (when (sim.year-is exactly: 2036)
                  (weather.perturb
                      offset-temperature: 0.51 #climate-change-weather))
            (when (sim.year-is exactly: 2037)
                  (weather.perturb
                      offset-temperature: 0.54 #climate-change-weather))
            (when (sim.year-is exactly: 2038)
                  (weather.perturb
                      offset-temperature: 0.57 #climate-change-weather))
            (when (sim.year-is exactly: 2039)
                  (weather.perturb
                      offset-temperature: 0.60 #climate-change-weather))
            (when (sim.year-is exactly: 2040)
                  (weather.perturb
                      offset-temperature: 0.63 #climate-change-weather))
            (when (sim.year-is exactly: 2041)
                  (weather.perturb
                      offset-temperature: 0.66 #climate-change-weather))
            (when (sim.year-is exactly: 2042)
                  (weather.perturb
                      offset-temperature: 0.69 #climate-change-weather))
            (when (sim.year-is exactly: 2043)
                  (weather.perturb
                      offset-temperature: 0.72 #climate-change-weather))
            (when (sim.year-is exactly: 2044)
                  (weather.perturb
                      offset-temperature: 0.75 #climate-change-weather))
            (when (sim.year-is exactly: 2045)
                  (weather.perturb
                      offset-temperature: 0.78 #climate-change-weather))
            (when (sim.year-is exactly: 2046)
                  (weather.perturb
                      offset-temperature: 0.81 #climate-change-weather))
            (when (sim.year-is exactly: 2047)
                  (weather.perturb
                      offset-temperature: 0.84 #climate-change-weather))
            (when (sim.year-is exactly: 2048)
                  (weather.perturb
                      offset-temperature: 0.87 #climate-change-weather))
            (when (sim.year-is exactly: 2049)
                  (weather.perturb
                      offset-temperature: 0.90 #climate-change-weather))
            (when (sim.year-is exactly: 2050)
                  (weather.perturb
                      offset-temperature: 0.93 #climate-change-weather))
            default: (weather 
                         name: climate-change-weather
                         windspeed: [ 5.1 5.0 4.9 4.4 4.3 3.8 3.8 3.7 4.0 4.3 4.5 4.7 ]
                         insolation: [ 20 60 100 140 180 220 220 180 140 100 60 20 ]
                         temperature: [ 4.3 4.9 6.5 8.9 11.7 14.6 16.6 16.4 14.1 10.6 7.1 4.2 ])
            )
        )
    (include-modules /SAP2012-Master/SAP12-tariffs.nhm)
    (include-modules /SAP2012-Master/SAP12-carbon.nhm)
    
    (~module sap
             (template init[])
             
             (template under-sap [@evaluate]
                       ;; Run a function under SAP conditions.
                       (under
                           (counterfactual.energy-calculator SAP2012)
                           (counterfactual.carbon)
                           (counterfactual.weather)
                           evaluate: @evaluate)
                       )
             
             (template score []
                       ;; Calculate the SAP score.
                       (/under-sap
                           evaluate: (house.fuel-cost-index)))
             )
    
    (~init-modules)   
    (sap-tariffs/define)
    
    (def-report SAP
                (column name: score value: (sap/score))
                (column name: energy value: (sap/under-sap evaluate: (house.energy-use)))
                (column name: emissions value: (sap/under-sap evaluate: (house.emissions)))
                (column name: fuel-cost value: (sap/under-sap evaluate: (house.fuel-cost)))
                )
    ;; REPORT Definitions (called at the bottom of the scenario)
(report.measure-installations name: InstallationsReport)
    
(~module AggregateTemplates
        (template EmbodiedCarbonStatsBaseline []
              aggregate.count
        ( aggregate.sum name: ExternalWallArea_total (- (house.energy-calculation-step AreaExternal) (house.roof-area)))
        ( aggregate.where  (all (house.any-wall has-external-insulation: true) (house.any-wall has-construction: AnySolid)) name: ExternalWallArea_Insulated (aggregate.sum  (- (house.energy-calculation-step AreaExternal) (house.roof-area)))  )
        ( aggregate.where  (all (house.any-wall has-cavity-insulation: true) (house.any-wall has-construction: AnyCavity))  name: CavityWallArea_Insulated (aggregate.sum (- (house.energy-calculation-step AreaExternal) (house.roof-area))) )
        ( aggregate.sum name: RoofArea_total  (house.roof-area))
        ( aggregate.where (all (house.has-loft) (house.loft-insulation-thickness-is above: 0)) name: RoofArea_Insulated                  (aggregate.sum (house.roof-area)) )
        ( aggregate.where (all (house.has-loft) (house.loft-insulation-thickness-is above: 0)) name: RoofLoftInsulationVolume_Insulated  (aggregate.sum (* (house.roof-area) (/ (house.loft-insulation-thickness) 1000))) )
              )
             
        (template StandardAggregatesBaseline []
                       (aggregate.sum  name: HouseEnergyUse                     (house.energy-use))
                       (aggregate.sum  name: GasUse                             (house.energy-use by-fuel: MainsGas ) )
                       (aggregate.sum  name: ElecConsumption                    (house.energy-use by-fuel: Electricity ))
                       (aggregate.sum  name: CommunityHeatConsumption           (house.energy-use by-fuel: CommunityHeat ))
                       (aggregate.mean name: MeanHeatingEfficiencyPrimaryHeat   (house.heating-efficiency of: PrimarySpaceHeating))
                       (aggregate.mean name: MeanWallUvalue                     (house.u-value of: Walls))
                       (aggregate.mean name: MeanRoofUvalue                     (house.u-value of: Roofs))
                       (aggregate.mean name: MeanFloorUvalue                    (house.u-value of:Floors))
                       (aggregate.mean name: MeanTotalUvalue                    (house.u-value))
                       (aggregate.where (house.has-boiler)                      name: CountOfBoilers                     aggregate.count)
                       (aggregate.where (house.has-insulated-hot-water-cylinder)name: CountOfInsulatedTanks              aggregate.count)
                       (aggregate.where (house.has-central-heating)             name: CountOfCentralHeating              aggregate.count)
                       (aggregate.where (all (house.has-central-heating) (house.main-heating-fuel-is Electricity) (> (house.heating-efficiency of: PrimarySpaceHeating) 2)) name: CountOfHP_pseudo                  aggregate.count)
                       (aggregate.sum   name: SumBuildingPeakHeatDemand         (house.peak-load internal-temperature: 21 external-temperature: -2 ))
                       (aggregate.mean  name: MeanInternalTemp                  (house.mean-internal-temperature))
                       
                       ;added from Domestic Energy FactFile 11/01/20
                       (aggregate.sum   name: PopulationPeople                 (house.number-of-occupants))
                       (aggregate.sum   name: SpaceheatingEnergy               (house.energy-use by-service: SpaceHeating))
                       (aggregate.sum   name: AppliancesEnergy                 (house.energy-use by-service: Appliances))
                       (aggregate.where (house.any-wall has-construction: AnyCavity)    name: CavityWallHouses                                                      aggregate.count)
                       (aggregate.where (house.any-wall has-cavity-insulation: true)    name: CavityWallHouses_With_CavityWallIns                                   aggregate.count)
                       (aggregate.where (house.any-wall has-construction: AnyCavity has-cavity-insulation: false) name: CavityWallHouses_WithOut_CavityWallIns      aggregate.count)
                       (aggregate.where (house.any-wall has-construction: AnySolid)      name: SolidWallHouses                                                      aggregate.count)
                       (aggregate.where (house.any-wall has-construction: AnySolid has-internal-insulation: true)   name: SolidWallHouses_With_InternalIns          aggregate.count)
                       (aggregate.where (house.any-wall has-construction: AnySolid has-internal-insulation: false)  name: SolidWallHouses_WithOut_InternalIns       aggregate.count)
                       (aggregate.where (house.any-wall has-construction: AnySolid has-external-insulation:  true)  name: SolidWallHouses_With_ExternalIns          aggregate.count)
                       (aggregate.where (house.any-wall has-construction: AnySolid has-external-insulation: false)  name: SolidWallHouses_WithOut_ExternalIns       aggregate.count)
                       (aggregate.mean  name: MeanWallHeatLossCoeff                     (house.energy-calculation-step HeatLossCoefficient_ExternalWall))
                       (aggregate.mean  name: MeanRoofHeatLossCoeff                     (house.energy-calculation-step HeatLossCoefficient_Roof))
                       (aggregate.mean  name: MeanTotalHeatLossCoeff                    (house.energy-calculation-step HeatTransferCoefficient))
                       (aggregate.sum   name: TotalHeatLossParam                        (house.energy-calculation-step HeatLossParameter))
                       (aggregate.mean  name: MeanTotalEnergyIntensity_perM2            (/ house.energy-use  house.total-floor-area ))
                                        
                       (aggregate.mean  name: MeanPrimarySpaceHeatEnergyIntensity_perM2         (/ (house.energy-use by-service: PrimarySpaceHeating)  house.total-floor-area ) )
                       (aggregate.mean  name: MeanSecondarySpaceHeatEnergyIntensity_perM2       (/ (house.energy-use by-service: SecondarySpaceHeating)  house.total-floor-area ) )
                       (aggregate.mean  name: MeanSpaceHeatDemandIntensity_perM2                (/ (house.energy-calculation-step SpaceHeating)  house.total-floor-area ))
                       (aggregate.mean  name: MeanPrimarySpaceHeatGASEnergyIntensity_perM2      (/ (house.energy-use by-service: PrimarySpaceHeating by-fuel: MainsGas)  house.total-floor-area ) )
                       (aggregate.mean  name: MeanPrimarySpaceHeatELECEnergyIntensity_perM2     (/ (house.energy-use by-service: PrimarySpaceHeating by-fuel: Electricity)  house.total-floor-area ) )
         
                       (aggregate.mean  name: MeanSAPrating                             (sap/score) )
                       (aggregate.where (house.has-solar-photovoltaic)   name: CountOfPV                                 aggregate.count)
                       (aggregate.where (house.has-solar-thermal)        name: CountOfSolarThermal                       aggregate.count)
                       
                       ; DHW metrics, added 22-01-2020
                       (aggregate.mean  name: MeanDHWHeatDemandIntensity_perM2                  (/ (house.energy-use by-service: WaterHeating)  house.total-floor-area ) )
                       (aggregate.mean  name: MeanDHW_GASEnergyIntensity_perM2                  (/ (house.energy-use by-service: WaterHeating by-fuel: MainsGas)  house.total-floor-area ))
                       (aggregate.mean  name: MeanDHW_ELECEnergyIntensity_perM2                 (/ (house.energy-use by-service: WaterHeating by-fuel: Electricity)  house.total-floor-area ))
                       (aggregate.sum   name: SumDHW_GASEnergy                         (house.energy-use by-service: WaterHeating by-fuel: MainsGas) )
                       (aggregate.sum   name: SumDHW_ELECEnergy                        (house.energy-use by-service: WaterHeating by-fuel: Electricity) )
                  
                        ;Population and occupancy
                       (aggregate.sum   name: SumPeoplePopulation                               (house.number-of-occupants))
                       (aggregate.mean  name: MeanOccupancy                                     (house.number-of-occupants) )
                
                        ;Ventilation
                       (aggregate.mean  name: ACH                                               (house.air-change-rate))
                       (aggregate.mean  name: VentilationHeatLoss                               (house.energy-calculation-step VentilationHeatLoss)) 
                
                        ;Health  
                        (aggregate.mean name: MeanHealth-sit                                    (house.sit))
                        (aggregate.sum  name: SumHealth-sit                                     (house.sit))
                        (aggregate.mean name: MeanHealth-sit-rebate                             (house.sit-rebate rebate: 500 temperature: 18))
                        (aggregate.sum  name: SumHealth-sit-reb                                 (house.sit-rebate rebate: 500 temperature: 18))
                        ;Costs
                        (aggregate.sum      name: TotalCapexOfMeasures      (capital-cost))
                        (aggregate.mean     name: MeanCapexOfMeasures       (capital-cost) )
                        ;Misc
                        (aggregate.sum  name: SumFloorArea                  (house.total-floor-area))
                        (aggregate.mean name: MeanFloorArea                 (house.total-floor-area))
                       ;Gross Space heating
                       (aggregate.sum  name: SumSpaceHeatDemand            (house.energy-calculation-step SpaceHeating)  )
                       (aggregate.sum  name: SumPrimarySpaceHeatGASEnergy           (house.energy-use by-service: PrimarySpaceHeating by-fuel: MainsGas)  )
                       (aggregate.sum  name: SumPrimarySpaceHeatLPGEnergy           (+ (house.energy-use by-service: PrimarySpaceHeating by-fuel: BulkLPG) (house.energy-use by-service: PrimarySpaceHeating by-fuel: BottledLPG)) )
                       (aggregate.sum  name: SumPrimarySpaceHeatBioMassEnergy       (+ (house.energy-use by-service: PrimarySpaceHeating by-fuel: BiomassPellets) (house.energy-use by-service: PrimarySpaceHeating by-fuel: BiomassWood) (house.energy-use by-service: PrimarySpaceHeating by-fuel: BiomassWoodchip)) )
                       (aggregate.sum  name: SumPrimarySpaceHeatELECEnergy          (house.energy-use by-service: PrimarySpaceHeating by-fuel: Electricity)    )
                        ; Cooking
                       (aggregate.sum  name: SumCookingEnergy                       (house.energy-use by-service: Cooking )    )
                       (aggregate.sum  name: SumCookingGASEnergy                    (house.energy-use by-service: Cooking by-fuel: MainsGas )    )
                       (aggregate.sum  name: SumCookingLPGEnergy                    (+ (house.energy-use by-service: Cooking by-fuel: BottledLPG ) (house.energy-use by-service: Cooking by-fuel: BulkLPG ))  )
                       (aggregate.sum  name: SumCookingELECEnergy                   (house.energy-use by-service: Cooking by-fuel: Electricity )    )
                       ; Lighting
                       (aggregate.sum  name: SumLightingEnergy                      (house.energy-use by-service: Lighting )    )
                       (aggregate.mean  name: MeanLowEnergyRatioLighting            (house.lighting-proportion A++ )    )
                       
                       ;DHW again, the leftovers
                       (aggregate.sum  name: SumDHWDemand                           (house.energy-use by-service: WaterHeating)  )
                       (aggregate.sum  name: SumDHWEnergy                           (house.energy-calculation-step WaterHeating_EnergyContent)  )
                       (aggregate.sum  name: SumDHWLPGEnergy                        (+ (house.energy-use by-service: WaterHeating by-fuel: BulkLPG) (house.energy-use by-service: WaterHeating by-fuel: BottledLPG)) )
                       (aggregate.sum  name: SumPrimarySpaceHeatBioMassEnergy       (+ (house.energy-use by-service: WaterHeating by-fuel: BiomassPellets) (house.energy-use by-service: PrimarySpaceHeating by-fuel: BiomassWood) (house.energy-use by-service: PrimarySpaceHeating by-fuel: BiomassWoodchip)) )
                       (aggregate.sum  name: SumSolarThermalDHWEnergy               (house.energy-use by-fuel:Photons by-service: WaterHeating ))
                       )
)

        (def-report StandardAggregates_Baseline
                record-changes: False 
               (column name: HouseEnergyUse                   value: (house.energy-use)                                 summary: sum  )
               (column name: GasUse                           value: (house.energy-use by-fuel: MainsGas )              summary: sum)
               (column name: ElecConsumption                  value: (house.energy-use by-fuel: Electricity )           summary: sum)
               (column name: CommunityHeatConsumption         value: (house.energy-use by-fuel: CommunityHeat )         summary: sum)
               (column name: MeanHeatingEfficiencyPrimaryHeat value: (house.heating-efficiency of: PrimarySpaceHeating) summary: mean)
               (column name: MeanWallUvalue                   value: (house.u-value of: Walls)                          summary: mean)
               (column name: MeanRoofUvalue                   value: (house.u-value of: Roofs)                          summary: mean)
               (column name: MeanFloorUvalue                  value: (house.u-value of:Floors)                          summary: mean)
               (column name: MeanTotalUvalue                  value: (house.u-value)                                    summary: mean)
               (column name: CountOfBoilers                   value: (house.has-boiler)                                 summary: count)
               (column name: CountOfInsulatedTanks value: (house.has-insulated-hot-water-cylinder)                      summary: count)
               (column name: CountOfCentralHeating            value: (house.has-central-heating)                        summary: count)
               (column name: CountOfHP_pseudo value: (all (house.has-central-heating) (house.main-heating-fuel-is Electricity) (> (house.heating-efficiency of: PrimarySpaceHeating) 2)) summary: count)
               (column name: SumBuildingPeakHeatDemand value: (house.peak-load internal-temperature: 21 external-temperature: -2 ) summary: sum)
               (column name: MeanInternalTemp                 value:(house.mean-internal-temperature)                   summary: mean)
                  
                ;added from Domestic Energy FactFile 11/01/20
               (column name: PopulationPeople                 value: (house.number-of-occupants)                        summary: sum)
               (column name: SpaceheatingEnergy               value: (house.energy-use by-service: SpaceHeating)        summary: sum)
               (column name: AppliancesEnergy value: (house.energy-use by-service: Appliances) summary: sum)
               (column name: CavityWallHouses value: (house.any-wall has-construction: AnyCavity) summary: count  )
               (column name: CavityWallHouses_With_CavityWallIns value: (house.any-wall has-cavity-insulation: true) summary: count  )
               (column name: CavityWallHouses_WithOut_CavityWallIns value: (house.any-wall has-construction: AnyCavity has-cavity-insulation: false) summary: count  )
            
            (column name: SolidWallHouses value: (house.any-wall has-construction: AnySolid) summary: count)
            (column name: SolidWallHouses_With_InternalIns value: (house.any-wall has-construction: AnySolid has-internal-insulation: true) summary: count  )
            (column name: SolidWallHouses_WithOut_InternalIns value: (house.any-wall has-construction: AnySolid has-internal-insulation: false) summary: count  )
            
            (column name: MeanWallHeatLossCoeff  value:(house.energy-calculation-step HeatLossCoefficient_ExternalWall)             summary: mean)
            (column name: MeanRoofHeatLossCoeff  value:(house.energy-calculation-step HeatLossCoefficient_Roof)                     summary: mean)
            (column name: MeanFloorHeatLossCoeff value:(house.energy-calculation-step HeatLossCoefficient_GroundFloor)              summary: mean)
            (column name: MeanTotalHeatLossCoeff value:(house.energy-calculation-step HeatTransferCoefficient)                      summary: mean)
            (column name: MeanTotalHeatLossParam value:(house.energy-calculation-step HeatLossParameter)                            summary: mean)
            (column name: TotalHeatLossParam     value:(house.energy-calculation-step HeatLossParameter)                            summary: sum)
            
            (column  name: MeanTotalEnergyIntensity_perM2       value: (/ house.energy-use  house.total-floor-area )                                    summary: mean)
            (column  name: MeanSpaceHeatEnergyIntensity_perM2   value: (/ (house.energy-use by-service: PrimarySpaceHeating)  house.total-floor-area )  summary: mean)
            
            (column name: MeanSAPrating value: (sap/score) summary: mean)
                  
            (column  name: SolidWallHouses_With_ExternalIns     value: (house.any-wall has-construction: AnySolid has-external-insulation:  true)   summary: count  )
            (column  name: SolidWallHouses_WithOut_ExternalIns  value: (house.any-wall has-construction: AnySolid has-external-insulation: false)   summary: count)
                  
            (column  name: MeanSpaceHeatDemandIntensity_perM2   value: (/ (house.energy-calculation-step SpaceHeating)  house.total-floor-area )    summary: mean)
                  
            (column  name: CountOfPV            value: (house.has-solar-photovoltaic)   summary: count)
            (column  name: CountOfSolarThermal  value:(house.has-solar-thermal)         summary: count)
                  
            (column  name: MeanSpaceHeatGASEnergyIntensity_perM2    value: (/ (house.energy-use by-service: PrimarySpaceHeating by-fuel: MainsGas)  house.total-floor-area ) summary: mean)
            (column  name: MeanSpaceHeatELECEnergyIntensity_perM2   value: (/ (house.energy-use by-service: PrimarySpaceHeating by-fuel: Electricity)  house.total-floor-area ) summary: mean)
         
            (column  name: MeanTotalGASEnergyIntensity_perM2    value: (/ (house.energy-use by-fuel: MainsGas)  house.total-floor-area )    summary: mean)
            (column  name: MeanTotalELECEnergyIntensity_perM2   value: (/ (house.energy-use by-fuel: Electricity)  house.total-floor-area ) summary: mean)
                  
                  ; DHW metrics, added 22-01-2020
            (column  name: MeanDHWHeatDemandIntensity_perM2 value: (/ (house.energy-use by-service: WaterHeating)  house.total-floor-area ) summary:mean)
            (column  name: MeanDHW_GASEnergyIntensity_perM2  value: (/ (house.energy-use by-service: WaterHeating by-fuel: MainsGas)  house.total-floor-area )    summary: mean)
            (column  name: MeanDHW_ELECEnergyIntensity_perM2 value: (/ (house.energy-use by-service: WaterHeating by-fuel: Electricity)  house.total-floor-area ) summary: mean)
            (column  name: SumDHW_GASEnergyIntensity  value:  (house.energy-use by-service: WaterHeating by-fuel: MainsGas)                  summary: sum)
            (column  name: SumDHW_ELECEnergyIntensity value:  (house.energy-use by-service: WaterHeating by-fuel: Electricity)                summary: sum)
                  
                ;Population and occupancy
            (column  name: SumPeoplePopulation value: (house.number-of-occupants) summary:sum)
            (column  name: MeanOccupancy value: (house.number-of-occupants) summary:mean)
                
                ;Ventilation
             (column name: ACH value: (house.air-change-rate) summary: mean)
             (column name: VentilationHeatLoss value: (house.energy-calculation-step VentilationHeatLoss)  summary: mean) 
                
                ;Costs
                (column name: TotalCapexOfMeasures value:(capital-cost) summary: sum)
                (column name: MeanCapexOfMeasures value: (capital-cost) summary: mean)
                
                ;Misc
                (column name: SumFloorArea value: (house.total-floor-area)                      summary: sum)
                (column name: MeanFloorArea value: (house.total-floor-area)                     summary: mean)
                      )
    
    (def-report MIT_Heat_Demand (cut name: cutandshut Flags) record-changes: False
                (column name: aacode value: (house.survey-code))
                (column name: heatEfficiency value: (house.heating-efficiency of:PrimarySpaceHeating) )
                (column name: energyDemandTotal value: (house.energy-use))
                (column name: energyDemandGas value: (house.energy-use by-fuel: mainsgas))
                (column name: energyDemandElec value: (house.energy-use by-fuel: electricity))
                (column name: MIT value: (house.mean-internal-temperature))
                (column name: Flags value: (house.flags))
                (column name: AirChangesCalc value: (house.energy-calculation-step AirChanges_ChimneysFluesFansAndPSVs))
                (column name: AirChangesMeasurement value: (house.energy-calculation-step InfiltrationRateMaybePressureTest))
                )
    ;define variable for the heating internal set point temperature
    (def internalSetpointTemp default: 21 on: simulation)
    ;define variable for the the number of houses to be retrofitted each year
    (def RetrofitAmbition default: 100000 on: simulation)
    ;define variable for the number of new build to be constructed annually
    (def NewBuildAmbition default: 190000 on: simulation)
    ;define variable for the number of new HPs to be installed annually (will be installed as part of New Build)
    (def NewHPAmbition default: 20000 on: simulation)
    ;define variable for maximum heating system installations per year, this is derived from the current rate of boiler installations of 1.7million per year curently but  closer to 1.5 historically
    (def RetrofitHeatingSystemInstallationLimit default: 1500000 on:simulation)
    ;define variable for proportion of new builds which should have Solar Thermal installed
    (def NewSolarThermalAmbition default: 0.25 on:simulation)
    ;define variable for increase in retrofits possible per year, i.e. ramp rate of installations.  Used up to the #RetrofitAmbition cap
    (def RetrofitRampRate default:50000 on:Simulation)
    ;define variable for the baseline (i.e. existing at start of scenario) level of home working, %
    (def HomeWorkingBase default: 0.05 on:Simulation) ;5%
    ;define variable for the annual increase (i.e. existing at start of scenario) level of home working, %
    (def HomeWorkingAnnualIncrease default: 0.000 on:Simulation) ; no increase in BAU Baseline
    ;define variable for the baseline (i.e. existing at start of scenario) level of home working, %
    (def 4DayWorkingBase default: 0.0 on:Simulation) ;0% 
    ;define variable for the annual increase (i.e. existing at start of scenario) level of home working, %
    (def 4DayWorkingAnnualIncrease default: 0.000 on:Simulation) ; no increase in BAU Baseline 
    
    ;; set the heating temperature to lower value to mimic an avoidance of comfort taking
    ; internal temperatures are actually already constant in UKTM, so this is a demand reduction inadvertently included
    ; from UKTM: The mean internal temperature required in all dwellings is 17.26°C. Source - ECUK Domestic data tables 2014 update, Table 3.06 - Average value over the period 2008-2012. 
    
    ;; scenario goes here:
    ; set initial start parameters for scenario
        (on.dates 01/01/2020
                    ; Sets all internal setpoints to 21C, double checks not to undo flagged Behavioural change homes
                    (apply name: HeatingSetpointInitialisation
                     (action.set-heating-temperatures
                         living-area-temperature: internalSetpointTemp
                         rest-of-dwelling-temperature: internalSetpointTemp)
                     (action.reduced-internal-gains)
                     to: ( filter (house.flags-match !EcoSetPoint_BehaviouralChange_Retro)
                                              (all-houses)
                                 )
                     )
              ; set Base Home working levels, this affects the heating schedule
                    (apply name: HomeWorkingInitilialisation
                     (action.set-heating-schedule update-flags: HomeWorking
                          (schedule 
                             on: AllDays
                             (heating 
                                 between: 7
                                 and: 23))
                         )
                     to: (sample HomeWorkingBase 
                                 (all-houses)
                                 )
                     )
              ; set Base 4 Day working week levels this affects the hearting schedule
                    (apply name: 4DayWorkingInitilialisation
                     (action.set-heating-schedule update-flags: 4DayWorking
                          (schedule 
                             on: Alldays
                             (heating 
                                 between: 7
                                 and: 9))
                          (schedule 
                             on: Alldays
                             (heating 
                                 between: 16
                                 and: 23))
                          (schedule 
                             on: Friday
                             (heating 
                                 between: 7
                                 and: 23))
                          (schedule 
                             on: Weekends
                             (heating 
                                 between: 7
                                 and: 23))
                         )
                     to: (sample 4DayWorkingBase 
                                 (all-houses)
                                 )
                     )
              )
    
    ;  CONSTRUCTION actions, aggregates and probes
    (on.construction
        (apply
            to: (filter 
                    (house.age-is exactly:0)
                    (affected-houses)
                    )
            ; SET ALL NEW BUILD properties
            (action.set-wall-construction wall-type: TimberFrame)
            (action.set-wall-u   u-value: 0.3)                                  ; acc. Part La Secton 2.35 Table 2 'Limiting Fabric parameters'
            
            (measure.adjust-airchange-devices adjustment: 0 device-type: Vents) 
            (action.set-thermal-bridging-factor 0.15)                           ; acc. Part La Secton 3.10 'Thermal Bridges'
            ; (measure.install-draught-proofing proportion: 1)
            (measure.install-glazing frame-type: uPVC insulation-type:Argon   u-value: 2.0 glazing-type: double) ; Uvalue acc. Part La Secton 2.35 Table 2 'Limiting Fabric parameters'
            ; SAP default U values: 
            ; triple glazing = 1.8 (window) 2.0 (roof window)
            ; double glazing = 2.4 (window) 2.6 (roof window)
            (measure.lighting proportion-led:100%)                                ; acc. Part La Secton 3.10 'Thermal Bridges'
            )
        ; LOFT insulation for houses with LOFT
        (apply
            to: (filter (all
                            (house.buildyear-is exactly: 0)
                            (house.has-loft)
                            (house.is-suitable-for(measure.loft-insulation thickness: 300 u-value: 0.2))
                            )
                        )
            (measure.loft-insulation thickness: 300 u-value: 0.2)                ;placeholder thickness
            ;(action.set-loft-insulation u-value: 0.2 )  ; could be thickness determined BUT Uvalue 0.2 set acc. Part La Secton 2.35 Table 2 'Limiting Fabric parameters'
            )
        ; FLOOR insulation for proporties where suitable
        (apply
            to: (filter (all
                            (house.buildyear-is exactly: 0)
                            (house.is-suitable-for (measure.floor-insulation thickness: 50 u-value: 0.2))
                            )
                        )
            (measure.floor-insulation thickness: 50 u-value: 0.2)               ;placeholder thickness
            ;(action.set-floor-insulation u-value: 0.25)                         ; acc. Part La Secton 2.35 Table 2 'Limiting Fabric parameters'
            )
        
        ; Boilers for ALL new builds up to 2030 (ASHPs installed separately)
        ; Step 1: install combi boilers to all newly build homes which are on gas
        (apply
            to: (filter (all
                            (house.buildyear-is exactly: 0)
                            (house.is-on-gas)
                            (sim.year-is below: 2030)
                            )
                        )
            (measure.combi-boiler)
            )
        ; Step 2: adjust all boilers to BoilerPlus efficiency standard
        (apply             
            to: (filter (all
                            (house.buildyear-is exactly: 0)
                            (house.has-boiler)
                            (sim.year-is below: 2030)
                            )
                        )
            (action.change-efficiency summer-efficiency: 0.92)
            (action.change-efficiency winter-efficiency: 0.92)
            )
        ; Step 3: Give all boilers BoilerPlus controls
        (apply             
            to: (filter (all
                            (house.buildyear-is exactly: 0)
                            (house.has-boiler)
                            (sim.year-is below: 2030)
                            )
                        )
            (measure.heating-control type: TimeTemperatureZoneControl)
            (measure.heating-control type: ThermostaticRadiatorValve)
            )
        
        ; AIR Source HPs for subset of new builds up to 2030
        (apply
            to: (sample NewHPAmbition
                        (filter (all
                                    (house.is-suitable-for (measure.heat-pump type: AirSource))
                                    (house.age-is exactly: 0) ; belt and braces to ensure only new builds considered
                                    (sim.year-is below: 2030)
                                    )
                                )
                        )
            (measure.heat-pump type: AirSource ; cylinder-insulation: 100  size:(size (house.peak-load) min: 1 max: 10)
                               update-flags: newBuildASHP )
            (measure.heating-control type: TimeTemperatureZoneControl)
            (measure.heating-control type: ThermostaticRadiatorValve)
            )
        
        ; AIR Source HPs for ALL of new builds after to 2030 IF suitable
        (apply
            to: (filter (all
                            (house.is-suitable-for (measure.heat-pump type: AirSource))
                            (house.age-is exactly: 0) ; belt and braces to ensure only new builds considered
                            (sim.year-is above:  2030)
                            )
                        )
            (measure.heat-pump type: AirSource  ;cylinder-insulation: 100  size:(size (house.peak-load) min: 1 max: 10
                               update-flags: newBuildASHP )
            (measure.heating-control type: TimeTemperatureZoneControl)
            (measure.heating-control type: ThermostaticRadiatorValve)
            )
        
        ; GROUND Source HPs for ALL of new builds after to 2030 IF suitable
        (apply
            to: (filter (all
                            (house.is-suitable-for (measure.heat-pump type: GroundSource))
                            (house.age-is exactly: 0) ; belt and braces to ensure only new builds considered
                            (sim.year-is above:  2030)
                            )
                        )
            (measure.heat-pump type: GroundSource  ;cylinder-insulation: 100  size:(size (house.peak-load) min: 1 max: 10
                               update-flags: newBuildGSHP )
            (measure.heating-control type: TimeTemperatureZoneControl)
            (measure.heating-control type: ThermostaticRadiatorValve)
            )
        
        ; SOLAR Thermal installations on a proportion of newly CONSTRUCTED buildings
        (apply
            to: (sample NewSolarThermalAmbition
                (filter (all
                            (house.is-suitable-for (measure.solar-dhw area: (house.number-of-occupants) ))
                            (house.age-is exactly: 0) ; belt and braces to ensure only new builds considered
                            )
                )
                            )
            (measure.solar-dhw area: (house.number-of-occupants)
                               update-flags: newBuildSolarThermal  )
            )
        ; AGGREGATE COUNT and PROPERTIES of annually newly CONSTRUCTED buildings
          (apply
                  name: NEW-build-stats-annual
                  to: (affected-houses) 
                   (send-to-report from: NEW-build-stats-annual #StandardAggregates_Baseline)
                  )
          ; Set internal set point temperature in line with scenario philosophy
            (apply name: HeatingSetpointInitialisation_NewBuild
                     (action.set-heating-temperatures
                         living-area-temperature: internalSetpointTemp
                         rest-of-dwelling-temperature: internalSetpointTemp)
                     (action.reduced-internal-gains)
                     to: ( filter (house.flags-match !EcoSetPoint_BehaviouralChange_Retro)
                                              (all-houses)
                                 )
                     )
        )
    

    ;; RATES of CONSTRUCTION and DEMOLITION
    ; From UKTM document '05_residential_UKTMdoc.docx' section 5.3.2
    ;The total housing stock to 2050, in Figure 7.4, is based on forecasts from Boardman et al. (2005) 
    ; and assumes an existing house demolition rate of 0.26% per year 
    ; and a construction rate of approximately 190,000 new houses per year.
    ;; set the construction rate to match the UKTM rate
    ;; set the DEMOLITION rate to match the UKTM rate
    (on.dates (regularly)
              (apply action.demolish
                     to:   (sample 0.00260  
                                   (filter (house.age-is above: 60) (all-houses))
                                   )
                     )
              ;; Build and define new build characteristics here
              (apply (action.construct name:newbuildConstruction)
                    (house.flag newBuild)
                     to: (sample NewBuildAmbition 
                                 (filter 
                                     (all 
                                         (house.buildyear-is above: 2000 )
                                         (house.any-wall has-construction: TimberFrame)
                                      )
                          (all-houses)
                                  )
                            )
               )
               ;select cohort for retrofit and Flag them
               (apply name:RetroFitCohort
                     (house.flag RetroFitCohortFlag)
                  to: (sample (min RetrofitAmbition (* RetrofitRampRate (- (sim.year) 2020))) (filter (house.buildyear-is below: 2019)
                                 (all-houses))
                     )
                )
              ;; Changes to existing stock
              ; decrease all boiler efficiencies to take account of lack of servicing
              

              
              ;; RETROFIT actions to exsting stock
              ; ventilation actions NOTE: NHM only has natural ventilation, so the proxy for a transition to MVHR is to reduce Vents & fans to zero
              ;CHECK ach parameter , since ventilation measures dont affect it.
              
              (apply name: NEWboilerReplacingOLDboilers
                     (measure.combi-boiler summer-efficiency: 0.90 winter-efficiency: 0.90 )
                     to: (sample RetrofitHeatingSystemInstallationLimit 
                                 (filter
                                        (all
                                            (house.has-boiler)
                                            (> (+ house.space-heatingsystem-age (- sim.year 2013 )) 15 )
                                 )
                             ))
                     )
            ;  (apply name:VentilationRetrofit 
            ;         (measure.adjust-airchange-devices adjustment: 0 device-type: Vents)
            ;         (measure.adjust-airchange-devices adjustment: 0 device-type: Fans)
            ;         (measure.install-draught-proofing proportion: 1)
            ;         (house.flag VentRetrofit)
            ;         to: (sample RetrofitAmbition (filter (house.buildyear-is below: 2019)
            ;                                              (all-houses))
            ;                     )
            ;         )
              (apply name: FabricRetrofit
                     ; SET Fabric retrofit actions properties
                     ;(action.set-wall-construction wall-type: TimberFrame)
                     ;(action.set-wall-u   u-value: 0.1)
                     (measure.wall-insulation type: Cavity suitable-construction:AnyCavity resistance: 0.05 thickness: 100)
                     (measure.wall-insulation type: External resistance: 0.03 suitable-construction: AnySolid thickness: 150)
             ;        (measure.wall-insulation type: Internal suitable-construction: GraniteOrWhinstone thickness: 10)
             ;        (measure.wall-insulation type: Internal suitable-construction: Sandstone thickness: 10)
             ;        (measure.wall-insulation type: Internal suitable-construction: Cob thickness: 10)
             ;        (measure.floor-insulation u-value: 0.1 thickness:50)
             
                     (measure.loft-insulation resistance: 0.044 thickness: 300)
                     (house.flag FabricRetrofit)
                  to: (house.flags-match RetroFitCohortFlag
                     )
                     )
              (apply name: GlazingRetrofit
                     ; Glazing retrofit, ------should be changed to include different glazing options by age of building
                     (measure.install-glazing frame-type: uPVC insulation-type:ArgonLowESoftCoat   u-value: 1.8 glazing-type: Triple)
                  to: (house.flags-match RetroFitCohortFlag
                     )
                )
              ;;GLOBAL REPORTS
              ; GENERAL aggregation Housing Stock tracking
              (aggregate name: HousingStockTracker_Baseline
                         (aggregate.count name:TotalPopulation)
                         )
              (apply
                  to:(all-houses) name: allHousesAnnualReport_Baseline
                  (send-to-report #MIT_Heat_Demand) 
                  (probe.aggregate name: stock_energy_aggregate
                                   capture: [(aggregate.sum (house.energy-use))]
                                   action.do-nothing)
                  )
              (apply
                  to: (house.flags-match FabricRetrofit)   name: FabricRetrofitAnnualReport
                  (send-to-report #MIT_Heat_Demand) 
                  (probe.aggregate name: stock_energy_aggregate_Baseline
                                   capture: [(aggregate.sum (house.energy-use))]
                                   action.do-nothing)
                  )
              
              ; AGGREGATE stats for total power needed to provide GAS and ELEC year on year
              (aggregate
                  name:ALL-build-GAS_POWER-stats_Baseline
                  over: (filter 
                            (all
                                (house.main-heating-fuel-is MainsGas)
                                (house.has-boiler))
                            (all-houses)
                            )
                  (aggregate.sum name: TotalGAS_peakDemand_kW (/ (house.peak-load external-temperature: -2 internal-temperature: 21) (house.heating-efficiency of: PrimarySpaceHeating)) )
                  (aggregate.count name: NoBuildingsWithGasHeating)
                  
                  )
              
              
              (aggregate
                  name:ALL-build-ELEC_POWER-stats_Baseline
                  over: (filter 
                            (all
                                (house.main-heating-fuel-is Electricity)
                                (house.has-central-heating))
                            (all-houses)
                            )
                  (aggregate.sum name: TotalELEC_peakDemand_kW  (/ (house.peak-load external-temperature: -2 internal-temperature: 21) (house.heating-efficiency of: PrimarySpaceHeating)) )
                  (aggregate.count name: NoBuildingsWithElecHeating)
                  
                  )
              
            
              ; AGGREGATE COUNT and PROPERTIES of ALL buildings, divided by ON or OFF Gas grid
              ; OLD build (i.e. existing in 2019) and NEW build (built since 2019)
              (aggregate 
                  name: ALL-build-aggregates-ONgasGrid_Baseline
                  over: (filter (house.is-on-gas)(all-houses))
                  (AggregateTemplates/StandardAggregatesBaseline) 
                  )
               (aggregate 
                  name: ALL-build-aggregates-OFFgasGrid_Baseline
                  over: (filter (none house.is-on-gas )(all-houses))
                  (AggregateTemplates/StandardAggregatesBaseline)
                  )
              (aggregate
                  name: OLD-build-aggregates_Baseline
                  over: (filter (house.buildyear-is below: 2019)(all-houses))
                  (AggregateTemplates/StandardAggregatesBaseline) 
                  )
              (aggregate
                  name: NEW-build-aggregates_Baseline
                  over: (filter (house.buildyear-is above: 2019)(all-houses))
               (AggregateTemplates/StandardAggregatesBaseline)
                  )
              
              (aggregate
                  name: NEW-build-embodiedCarbs_Baseline 
                  over: (filter (house.buildyear-is above: 2019)(all-houses))
                 (AggregateTemplates/EmbodiedCarbonStatsBaseline) 
                  )
              
              (apply
                  name: ALL-build-stats_Baseline
                  to: (all-houses) 
                   (send-to-report from: ALL-build-stats #StandardAggregates_Baseline)
                  )
              
              (aggregate
                  name: ALL-build-aggregates_Baseline
                  over: (all-houses) 
                    (AggregateTemplates/StandardAggregatesBaseline)
                  )
              (aggregate
                  name: ALL-build-embodiedCarbs_Baseline 
                  over: (all-houses)
                 (AggregateTemplates/EmbodiedCarbonStatsBaseline) 
                  )
              
               )
    ;REPEAT annual aggregates and reporting for CHANGES to housing stock (sits outside the previous 'on.date(regulary))
    (on.change include-startup: true 
               (aggregate name: HousingStockChangeTracker_Baseline
                          (aggregate.count name:TotalPopulation)
                          )
               )
   
    
)